import type { Metadata } from 'next'
import React, { useState } from 'react'
import { useRouter } from 'next/router'
import { useIsMounted } from '~/hooks/useIsMounted'

import { Web3Button } from '@web3modal/react'
import { useAccount } from 'wagmi'

import { FileTextOutlined, CommentOutlined } from '@ant-design/icons'
import type { MenuProps } from 'antd'
import { Menu } from 'antd'
import Image from 'next/image'

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

type MenuItem = Required<MenuProps>['items'][number]

function getItem(
  label: React.ReactNode,
  key: React.Key,
  icon?: React.ReactNode,
  children?: MenuItem[],
  type?: 'group'
): MenuItem {
  return {
    key,
    icon,
    children,
    label,
    type,
  } as MenuItem
}

const items: MenuItem[] = [
  getItem(
    'Resume',
    'resume',
    <Image
      src="/head-paperclip.png"
      alt="noun-glasses-square"
      width="24"
      height="24"
    />,
    [getItem('All', '/resume/all'), getItem('My Resume', '/resume/my-resume')]
  ),
  getItem(
    'Message',
    'message',
    <Image
      src="/head-mailbox.png"
      alt="noun-glasses-square"
      width="24"
      height="24"
    />,
    [getItem('All', '/message/all')]
  ),
]

// submenu keys of first level
const rootSubmenuKeys = ['resume', 'message']

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  const [openKeys, setOpenKeys] = useState(['resume'])
  const router = useRouter()
  const { isConnected } = useAccount()
  const isMounted = useIsMounted()

  const onOpenChange: MenuProps['onOpenChange'] = (keys) => {
    const latestOpenKey = keys.find((key) => openKeys.indexOf(key) === -1)

    if (rootSubmenuKeys.indexOf(latestOpenKey!) === -1) {
      setOpenKeys(keys)
    } else {
      setOpenKeys(latestOpenKey ? [latestOpenKey] : [])
    }
  }

  const onClick: MenuProps['onClick'] = (e) => {
    router.push(e.key, undefined, { shallow: true })
  }

  if (!isMounted) return null
  return (
    <main className="w-full h-screen flex flex-col">
      <div className="w-full flex h-14 justify-between items-center border-b border-gray-200 py-2 px-2">
        <div className="font-bold flex items-center">
          RESUME
          <Image
            src="/glasses-square-fullblack.png"
            alt="noun-glasses-square"
            width="40"
            height="40"
          />
        </div>
        <Web3Button />
      </div>
      <div className="w-full h-full flex">
        {isConnected && (
          <Menu
            mode="inline"
            openKeys={openKeys}
            onOpenChange={onOpenChange}
            onClick={onClick}
            style={{ width: 256 }}
            items={items}
          />
        )}
        <div className="w-full py-2 px-2">{children}</div>
      </div>
    </main>
  )
}
